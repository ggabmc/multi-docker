# We need this file just to run the applications in local and  all of them work together

# also we would need this docker-compose.yml file if we are using elasticBeanstalk of aws

# to deploy the images in mutiple containers in this case (postgress, redis, api, client, worker)

version: '3'

services:

  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  
  redis:
    image: 'redis:latest'
  
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server   # use all the filde and folders from the /server folder as base to build this image
    volumes:
      - /app/node_modules  # Will leave the folder how it is
      - ./server:/app    # copy everything from server folder in the /app folder in the container 
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    
  client:
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
  
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379


  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
